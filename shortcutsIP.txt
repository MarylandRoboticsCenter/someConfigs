===============BASH===============

C-a – go to the start of the command line
C-e – go to the end of the command line
C-k – delete from cursor to the end of the command line
C-u – delete from cursor to the start of the command line
C-w – delete from cursor to start of word (i.e. delete backwards one word)
A-d – delete to end of word starting at cursor (whole word if cursor is at the beginning of word)
C-y – paste word or text that was cut using one of the deletion shortcuts (such as the one above) after the cursor

C-r – search the history backwards
C-s – stops the output to the screen (for long running verbose command)
C-q – allow output to the screen (if previously stopped using command above)
C-c – terminate the command
C-z – suspend/stop the command
c-l - clears the screen
fg - bring suspended command back to the foreground

A-.. - 

===============BASH commands===============

"cd -" - move to the previous directory
!! (e.g. sudo !!) - repeat the last command
"while ! [command]; do sleep 1; done" - keep executing a command until it succeeds
pv (e.g. "pv access.log | gzip > access.log.gz") - view progress of file transfers (pv command)
column -t (e.g. "cat /etc/passwd | column -t") - display at output as a table
===============VIM===============

:sp - split horizontally
:wq (or ZZ) - save and exit

,cc - comment out
,ci - toggle comments

C-t, C-d - indent current line forward, backwards (insert mode)
> or < - indent block (Visual mode)

"+y - copy the selection into clipboard buffer
gg"+yG – copy the entire buffer into + (normal mode)
"*dd – cut the current line into * (normal mode)
"+p – paste from + after the cursor (works in both normal and visual modes)

C-w + +(or -) - resize the height of the current window by a single row (horiz split)
C-w + <(or >) - resize the width of the current window by a single column (vert split)
C-w + = - resize all windows to equal dimensions based on their splits

a - Append text following current cursor position
A - Append text to the end of current line
i - Insert text before the current cursor position
I - Insert text at the beginning of the cursor line
J - Join next line down to the end of the current line
r - Replace one character at the cursor position

u - undo
C-R - redo

w - move cursor forward one word
b - move cursor backward one word

gg - move cursor to the beginning of file (1st row, 1st column)
G - move cursor to the last line
$ - Move cursor to the end of current line
0 (zero) - Move cursor to the beginning of current line

:noh - turn off highlighting until the next search
:reg - show all defined registers

:windo diffthis - re-scan the files for differences
:diffupdate - to remove leftover spacing issues
]c - next difference
[c - previous difference
dp - diff put
do - diff obtain

:set syntax=sh - change syntax highlighting to bash

===============TMUX===============

A-a + c - create new window
A-a + w - list windows
A-a + s - list sessions
A-a + | - split horizontally
A-a + - - split vertically
A-a + arrow - move to different pane

A-a + } - swap with next pane
A-a + [ - scroll mode, q to exit
C-Space - start selection
A-w or C-w - copy selection to buffer
A-a + ] - to paste from buffer

===============MC===============

A-s - quick search by first letetrs
A-h - show command history
A-S-h - show folder history


===============ROS===============

rqt & - shows all available rqt tools
rosrun rqt_graph rqt_graph - graph of nodes and topics
rosrun rqt_plot rqt_plot - plot topics
rosrun rqt_console rqt_console - displays logging output from nodes
rosrun rqt_logger_level rqt_logger_level - change verbosity of logging
rosrun rqt_tf_tree rqt_tf_tree

rosrun rviz rviz - launch rviz
rospack - provides information related to ROS packages

rosrun tf tf_monitor <frame1> <frame2> - monitor published tfs

rosrun sawyer_ipen send_urdf_ipen.py -f "$(rospack find sawyer_ipen)/scripts/sawyer_table.urdf" -l base -j pedestal_tfixed
